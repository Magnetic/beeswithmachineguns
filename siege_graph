#!/usr/bin/env python
"""
"""
import csv
import sys

from matplotlib import rcParams
import matplotlib.pyplot as plt

def main(input_file, output_file):
    
    columns = {}
    for d in csv.DictReader(input_file):
        for k,v in d.iteritems():
            columns.setdefault(k,[]).append(float(v))
            
    # sort all the columns in ascending order by concurrency
    conc_idx = [(c, i) for i, c in enumerate(columns['concurrency'])]
    sort_order = [i for c, i in sorted(conc_idx)]
    for k in columns:
        columns[k] = [columns[k][i] for i in sort_order]

    # shorthand to reuse x-axes in all plots
    x0, x1 = min(columns['concurrency']), max(columns['concurrency'])

    rcParams['font.size'] = 10

    # plot response time
    plt.subplot(4,1,1)    
    plt.ylabel('Latency (ms)')
    plt.axis([x0, x1, 0, max(columns['pctile_99'])*1.2])
    for col, fmt, label, linewidth in (
                     #('ms_per_request', 'k-'),
                     ('pctile_50', 'g-', 'median', 2.0),
                     ('pctile_75', 'c-', '75% <', 2.0),
                     ('pctile_90', 'y-', '90% <', 2.0),
                     ('pctile_95', 'm-', '95% <', 2.0),
                     ('pctile_99', 'r-', '99% <', 1.0)
                     ):
        plt.plot(columns['concurrency'], columns[col], fmt, linewidth=linewidth, label=label)
    plt.grid(True)
    plt.legend(loc='upper left', prop={'size':'small'})
        
    # plot req/s
    plt.subplot(4,1,2)    
    #plt.title('Requests Per Second')
    plt.ylabel('Reqs/sec')
    plt.axis([x0, x1, 0, max(columns['requests_per_second'])+5000.0])
    plt.plot(columns['concurrency'], columns['requests_per_second'], linewidth=2.0)
    plt.grid(True)
   
    # plot error rate
    plt.subplot(4,1,3)    
    #plt.title('Error Rate')
    plt.ylabel('Error %')
    plt.axis([x0, x1, 0, 100])
    error_rates = map(lambda f,c: 100.0 * f/c, columns['failed_requests'], columns['complete_requests'])    
    plt.plot(columns['concurrency'], error_rates, 'r', linewidth=2.0)
    plt.grid(True)

    # plot complete vs. failed requests
    y0, y1 = 0, max(max(columns['complete_requests']), max(columns['failed_requests']))
    plt.subplot(4,1,4)
    plt.ylabel('# Req')
    plt.axis([x0, x1, y0, y1])
    plt.plot(columns['concurrency'], columns['complete_requests'], 'g-', linewidth=2.0, label='succeeded')
    plt.plot(columns['concurrency'], columns['failed_requests'], 'r-', linewidth=2.0, label='failed')
    plt.grid(True)
    plt.legend(loc='upper left', prop={'size': 'small'})


    plt.savefig(output_file)    
    

if __name__=='__main__':
    
    input_filename = sys.argv[1]

    if input_filename == '-':
        input_file = sys.stdin
    else:
        input_file = open(input_filename, 'rb')
    
    if len(sys.argv)>2:
        output_file = open(sys.argv[2], 'wb')
    else:
        output_file = sys.stdout
    
    main(input_file, output_file)

